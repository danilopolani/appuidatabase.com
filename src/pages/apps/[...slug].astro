---
import { getCollection, type CollectionEntry } from 'astro:content';
import * as R from 'remeda';
// @ts-ignore
import path from 'node:path';
import Layout from 'src/layouts/Layout.astro';
import { getScreenCategoryName, getScreenCategoryIcon } from 'src/helpers';
import ScreenCard from 'src/components/ScreenCard.astro';
import type { Screen } from 'src/types';

export async function getStaticPaths() {
  return (await getCollection('apps')).map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<'apps'>;
}

const { entry } = Astro.props;

const screens = await getCollection('screens', ({ id }) => id.endsWith(`${path.sep}${entry.id}`));
const screenCategories = R.uniq(
  screens.map(({ id }) => id.split(path.sep)[0])
);
screenCategories.sort();
---
<Layout title={entry.data.title}>
  <header class="flex mb-20">
    <div class="border-pastel-black border-[3px] p-1 aspect-square w-[130px] h-[130px]">
      <img
        src={entry.data.image.src}
        alt={entry.data.title}
        class="w-full h-full object-cover" />
    </div>

    <div class="ml-4">
      <h1 class="font-heading text-3xl tracking-tighter">{entry.data.title}</h1>
      <div class="pl-1">
        <p class="text-slate-400">{entry.data.category}</p>
        {entry.data.technologies.length > 0 && (
          <p class="text-slate-600"><strong>Made with</strong>: {entry.data.technologies.join(', ')}</p>
        )}

        <a href={entry.data.url} target="_blank" class="block mt-4 text-pastel-purple hover:underline hover:decoration-wavy decoration-pastel-purple underline-offset-4">
          {entry.data.url}
        </a>
      </div>
    </div>
  </header>

  {screenCategories.map((category) => (
    <div class="flex mb-4">
      <div class="w-8 h-8 flex items-center justify-center bg-pastel-purple border-2 border-pastel-black mr-2">
        <Fragment set:html={getScreenCategoryIcon(category, 'w-5 h-5 text-pastel-black')} />
      </div>

      <h2 class="font-semibold text-2xl font-heading tracking-tighter">{getScreenCategoryName(category)}</h2>
    </div>

    <div class="grid grid-cols-4 gap-5 mb-14">
      {screens.filter(({ id }) => id.startsWith(`${category}${path.sep}`)).map((section) => (
        section.data.map((screen: Screen) => (
          <ScreenCard
            title={screen.title}
            image={screen.image}
            platform={screen.platform} />
        ))
      ))}
    </div>
  ))}
</Layout>

<script>
// @ts-ignore no types available
import { LuminousGallery } from 'luminous-lightbox';
import 'node_modules/luminous-lightbox/dist/luminous-basic.css';

new LuminousGallery(document.querySelectorAll('.gallery-item'));
</script>
