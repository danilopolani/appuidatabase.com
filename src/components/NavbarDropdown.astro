---
interface Item {
  label: string;
  url: string;
}

interface Props {
  label: string;
  items: Item[];
}

const { label, items } = Astro.props;

const referenceId = label.toLocaleLowerCase().replace(/[^a-z0-9]/gi, '-');
const targetElementId = `nav-dropdown-${referenceId}`;
const triggerElementId = `nav-dropdown-trigger-${referenceId}`;
---
<li>
  <button id={triggerElementId} data-dropdown-toggle={targetElementId} class="flex items-center justify-between w-full py-2 pl-3 pr-4 text-slate-800 md:p-0 md:w-auto hover:underline hover:decoration-wavy decoration-pastel-yellow">
    {label}

    <svg class="w-2.5 h-2.5 ml-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
    </svg>
  </button>

  <!-- Dropdown menu -->
  <div id={targetElementId} class="z-10 hidden font-normal bg-pastel-purple divide-y divide-pastel-black border-2 border-pastel-black w-44">
    <ul class="py-2 text-sm text-purple-black" aria-labelledby={triggerElementId}>
      {items.map((item) => (
        <li>
          <a href={item.url} class="block px-4 py-2 hover:bg-pastel-yellow">{item.label}</a>
        </li>
      ))}
    </ul>
  </div>
</li>